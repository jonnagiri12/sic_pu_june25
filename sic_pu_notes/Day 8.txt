original_str = 'college'

i++
j--
a[i] = b[j]
b[j]++

a[++i] = b[--j]++ // low cohesive
----------------------------------
2 servers
2 types of requests
allocation +ve number
deallocation -ve number

N
45  -13  -30  -10  50  35  -5  5  8
0         2         4

45 + (-30) + 50 + (-5) + 8
68 units of memory is allocated by server1
----------------------------------- 
Read N,  X  and Y
X + Y = N

numbers = []
Read N numbers in to numbers

sort numbers (ascending)
p = numbers[y] - nunmbers[y-1] - 1
print p

-------------------------------------------
def check_arrangement(b, g)
	arrangment = true
	for i in range(1, n):
		if girls[i] >= girls[i-1] and boys[i] >= girls[i-1]:
			continue # go to the next iteration
		else:
			arrangment = False
			break # Once we know such arrangment is not possible, quit
	if arrangment and (g[0] >= b[0] and g[-1] >= b[-1]) or (b[0] >= g[0] and b[-1] >= g[-1])
		return "yes"
	
	
	
Read T
output[]
	for T times do:
		Read N
		g[]
		b[]
		Read N heights of g[]
		Read N heights of b[]
		sort g[]
		sort b[]
		result = check_arrangement(b, g)
		output.append(result)
print output
